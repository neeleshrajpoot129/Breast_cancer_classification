# -*- coding: utf-8 -*-
"""Breast_cancer_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OZgUeS1btOJdhISI-gULDxGi9XP-29Mf
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

df=pd.read_csv('breast-cancer.csv')
df.isnull().sum()

df.head()
#no need of id and unnamed 32 thus we have removed those columns

df_new=df.drop(['id','Unnamed: 32'],axis=1)

df_new

df_new.isnull().sum()

#checking the categories in diagnosis column
df_new['diagnosis'].unique()

X=df_new.iloc[:,1:].values
y=df_new.iloc[:,0].values

print(X)
print(y)

df_new.corr()

# we are having our target variable as categorical 
# we need to encode it
from sklearn.preprocessing import LabelEncoder
lb=LabelEncoder()
y=lb.fit_transform(y)

#we have encoded our target variable to numerical variable 
#now we can work on it
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)

from sklearn.linear_model import LogisticRegression
lr=LogisticRegression()
lr.fit(X_train,y_train)

y_pred1=lr.predict(X_test)

from sklearn.metrics import confusion_matrix,accuracy_score
print(confusion_matrix(y_test,y_pred1))
print(accuracy_score(y_test,y_pred1))

#lets increase the accuray using other classication algorithm
from sklearn.svm import SVC
support=SVC()
#tuning the hyperparamets using grid search
from sklearn.model_selection import GridSearchCV

param_grid = {'C': [0.1, 1, 10, 100], 'gamma': [1, 0.1, 0.01, 0.001], 'kernel': ['rbf']}

gridsearch=GridSearchCV(support,param_grid,cv=5)

gridsearch.fit(X_train,y_train)

gridsearch.best_estimator_

gridsearch.best_params_

y_pred2=gridsearch.predict(X_test)

print(accuracy_score(y_test,y_pred2))
print(confusion_matrix(y_test,y_pred2))

